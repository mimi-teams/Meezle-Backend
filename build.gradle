plugins {
    id "org.springframework.boot" version "2.6.14"
    id "io.spring.dependency-management" version "1.0.14.RELEASE"
    id "java"
    id "com.google.cloud.tools.jib" version "3.2.1"
}


group = "com.mimi.w2m.backend"
sourceCompatibility = "17"

repositories {
    mavenCentral()
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:2021.0.5"
    }
}

dependencies {

    // Spring MVC
    implementation "org.springframework.boot:spring-boot-starter-web"

    // Spring Data
    implementation "org.springframework.boot:spring-boot-starter-data-jpa"
    // Object mapper 로 LocalDateTime 을 직렬화하기 위해 추가
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.14.0'

    // DB Connector
    runtimeOnly "mysql:mysql-connector-java"

    // Lombok
    compileOnly 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'

    // Test
    implementation 'org.springframework.boot:spring-boot-starter-test'

    // openfeign https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-starter-openfeign
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'

    // Spring Retry
    implementation("org.springframework.retry:spring-retry:1.3.4")

    //JWT https://github.com/auth0/java-jwt
    implementation 'com.auth0:java-jwt:4.2.1'

    //Open-API (Swagger)
    implementation 'org.springdoc:springdoc-openapi-ui:1.6.13'

    // Validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // UUID
    implementation("com.fasterxml.uuid:java-uuid-generator:4.0.1")
}

tasks.named("test") {
    useJUnitPlatform()
}

// Activate Test profile
tasks.test {
    systemProperty 'spring.profiles.active', 'test'
//	systemProperty 'java.util.logging.manager', 'org.apache.logging.log4j.jul.LoggerFactory'
}


jib {
    from {
        image = "eclipse-temurin:17-jre"
    }
    to {
        image = System.getProperty("image", "")
        tags = [(System.getProperty("tag", "latest"))]
    }
    container {
        jvmFlags = [
                "-server",
                "-XX:+UseG1GC",
                "-Xms256M",
                "-Xmx256M",
                "-Duser.timezone=Asia/Seoul"
        ]
        ports = ["8080"]
    }
}